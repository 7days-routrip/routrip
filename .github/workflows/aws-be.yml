name: Deploy to ECR (backend)

on:
  push:
    branches: [ "deploy/dockerfile" ]

env:
  AWS_REGION: ap-northeast-2                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: 7days-be # set this to your Amazon ECR repository name
  CONTAINER_NAME: 7days-be           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Generate env
      run: |
        echo "DB_USER=$DB_USER" > ./server/.env
        echo "DB_PASSWORD=$DB_PASSWORD" > ./server/.env
        echo "DB_DATABASE=$DB_DATABASE" > ./server/.env
        echo "DB_HOST=$DB_HOST" > ./server/.env
        echo "DB_PORT=$DB_PORT" > ./server/.env
        echo "DB_LIMIT=$DB_LIMIT " > ./server/.env
        echo "CORS_ORIGIN=$CORS_ORIGIN" > ./server/.env
        echo "JWT_ACCESS_SECRET=$JWT_ACCESS_SECRET > ./server/.env
        echo "JWT_ACCESS_EXPIRED_IN=$JWT_ACCESS_EXPIRED_IN" > ./server/.env
        echo "JWT_REFRESH_SECRET=$JWT_REFRESH_SECRET" > ./server/.env
        echo "JWT_REFRESH_EXPIRED_IN=$JWT_REFRESH_EXPIRED_IN" > ./server/.env
        echo "SALT_ROUND=$SALT_ROUND" > ./server/.env

      env:
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_LIMIT: ${{ secrets.DB_LIMIT }}
        CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}
        JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
        JWT_ACCESS_EXPIRED_IN: ${{ secrets.JWT_ACCESS_EXPIRED_IN }}
        JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
        JWT_REFRESH_EXPIRED_IN: ${{ secrets.JWT_REFRESH_EXPIRED_IN }}
        SALT_ROUND: ${{ secrets.SALT_ROUND }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      working-directory: ./server
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT